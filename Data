package wordgame3;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author Mark
 */
public class Data {

    int numberOfRecords;
    String[] pNames;
    String[][] _userInfoG;
    int[] indexKeeper;

    public Data() throws FileNotFoundException {
        
        getInfoFromFile();
        
        indexKeeper = new int[2];
        indexKeeper[0] = -1;
        indexKeeper[0] = -1;
        
        setInfoToFile();
        
    }

    private void getInfoFromFile() throws FileNotFoundException {
        //read in your userInfo file
        ArrayList<String> _userInfo = new ArrayList<>();
        File myFile = new File("userInfo.txt");
        Scanner inputFile = new Scanner(myFile);
        
        //load all your data from text file
        while (inputFile.hasNext()) {
            
            _userInfo.add(inputFile.nextLine());

        }   
        inputFile.close();
        
        numberOfRecords = _userInfo.size();
        
        //String[][] dBase = new String[100][]; // logic from the basic read and write to database game to create an array of usersInfo
        _userInfoG = new String[100][];
        
        //put the userinfo into a gloabl array
        for (int i = 0; i < numberOfRecords; i++) {
            
            System.out.println(_userInfo.get(i));
            //dBase[i] = userInfo.get(i).split(" "); // logic from the basic read and write to database game to create users with passwords in database
            _userInfoG[i] = _userInfo.get(i).split(" ");
            
        }
    }

    private void setInfoToFile() throws FileNotFoundException {
        //write inserInfo into the file
        String filename = "userinfo.txt";
        PrintWriter outputfile = new PrintWriter(filename);
        
        for (int i = 0; i < numberOfRecords; i++) {
            
            for (int j = 0; j < _userInfoG[i].length; j++) {
                
                outputfile.printf("%s ", _userInfoG[i][j]);
                
            }
            
            outputfile.printf("\n");

        }
        
        outputfile.close();
    }

    public String userController() {
        
        Scanner scan = new Scanner(System.in);
        int flag = -1;
        String pNames = new String("");
        
        do {
            
            System.out.println("Enter a username:"); //userController method will ask for user name 
            String userName = new String(scan.nextLine());
            //String pNames = new String("");
            
            for (int i = 0; i < numberOfRecords; i++) {
                
                if (_userInfoG[i][0].equalsIgnoreCase(userName)) {
                    
                    flag = i; //you play the game with that username.
                    
                }
            }
            if (flag == -1) {  //if it doesnâ€™t exist in your usersInfo Array 
                
                System.out.println("Enter a password:"); //it will ask for a password to create a new user, 
                String password = scan.nextLine();
                
                _userInfoG[numberOfRecords] = new String[3];
                _userInfoG[numberOfRecords][0] = userName;
                _userInfoG[numberOfRecords][1] = password;
                _userInfoG[numberOfRecords][2] = "0";
                
                flag = numberOfRecords;
                numberOfRecords++;
                
            } else { //else it will ask for your previously saved password to let
                
                System.out.println("Enter a password:");
                String password = new String(scan.nextLine());
                
                if (password.equals(_userInfoG[flag][1])) { //If password was correct it
                    
                    System.out.println("Correct");
                    
                } else {
                    
                    System.out.println("False");
                    
                }
                
                pNames = userName;
                
            }

        } while (flag == -1);
        
        if (indexKeeper[0] == -1){
            indexKeeper[0]= flag;
               
        }else{
            indexKeeper[1]= flag;
        }

        return(pNames); //will return the username to gameController.
        
    }

    public void setScores(int[] scores) throws FileNotFoundException {
        //replace new high score with old one
        _userInfoG[indexKeeper[0]][2] = String.valueOf(scores[0]);
        _userInfoG[indexKeeper[1]][2] = String.valueOf(scores[1]);
        
        setInfoToFile();

    }

    public int getScores(String pName) {

        //remove the password colomn from userInfo and return the names and the scores
        int scores = 0;
        
        for (int i = 0; i < numberOfRecords; i++){
            
            if (_userInfoG[i][0].equalsIgnoreCase(pName)) 
                {
                
                   scores = Integer.parseInt(_userInfoG[i][2]);
                   
                }
            
        }
        
        return scores;

    }
}
