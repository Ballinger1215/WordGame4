package wordgame3;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author Mark
 */
public class Game {
    
    int[] scores;
    String[] pNames;
    
    public Game(String[] names){
        
        pNames = names;
        
    }
    
    public String[] playGame() throws FileNotFoundException, IOException{
        
        int w = 0;
        Random rand = new Random();
        Scanner scan = new Scanner(System.in);
        boolean correctGuess = false;
        boolean notRevealed = true;
        int playerController = -1; // player1 == -1 and player2 == +1
        

        
            //play the wordGame
            System.out.printf("Hello %s and %s", pNames[0], pNames[1]);

            String wordList[] = new String[100]; //to get a random word
            String word = new String();

            //read a file into an array of strings
            File myFile = new File("words.txt");
            Scanner inputFile = new Scanner(myFile);
            while (inputFile.hasNext() && w < wordList.length) {
                wordList[w] = inputFile.nextLine();
                w++;
            }
            word = wordList[rand.nextInt(w)]; //select a random number in that array range
            //System.out.println(word); //test if the word was printing out from the file
            
            //select the word from the array
            char[] guessWord = new char[word.length()];
            for (int i = 0; i < word.length(); i++) {
                guessWord[i] = '-';
            }

            System.out.println(word); // prints out word that you are guessing in game for testing
            System.out.println(guessWord); // changes letter of words to dashes so the user cant see the word

            while (notRevealed) {
                if (correctGuess == false) {

                    playerController++;

                    if (playerController == 2) {
                        playerController = 0;
                    }
                }
                correctGuess = false;

                System.out.printf("%s, please guess:", pNames[playerController]);
                String guess = scan.next(); //asking for their guess
                notRevealed = false;

                for (int i = 0; i < word.length(); i++) { //check to see if it is in the word

                    if (word.charAt(i) == guess.charAt(0)) {

                        guessWord[i] = guess.charAt(0); //replace the dashes with correct letter
                        correctGuess = true;
                        scores[playerController]++;
                    }
                    if (guessWord[i] == '-') {
                        notRevealed = true;
                    }

                }
                System.out.println(guessWord);

            }//ask again (loop)
//            System.out.printf("%s: %d\n%s: %d\n", pNames[0], scores[0], pNames[1], scores[1]);
//            
//                if (scores[0] > scores[1]) {
//                    System.out.println(pNames[0] + " wins");
//                //outputfile.println(pNames[0] + " wins");
//                } else {
//                    System.out.println(pNames[1] + " wins");
//                //outputfile.println(pNames[1] + " wins");
//             
//            outputfile.printf("%s: %d\n%s: %d\n", pNames[0], scores[0], pNames[1], scores[1]);
//            outputfile.close();
            inputFile.close();
            return new String[2];

        }
        
        //return the scores
    
}
